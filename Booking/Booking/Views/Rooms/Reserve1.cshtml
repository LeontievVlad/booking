@model Booking.Models.ReservedViewModels.CreateReserveViewModel

@{
    ViewBag.Title = ViewBag.NameRoom;
}

@Html.AntiForgeryToken()
<div class="form-horizontal" id="result">

    <h3>
        @ViewBag.NameRoom
    </h3>

    <hr />

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.EventName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EventName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EventName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ReservedDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*<input type="text" value="@Model.ReservedDate.ToString("dd-MM-yyyy")" name="ReservedDate" id="ReservedDate" class="form-control" disabled />*@
            @Html.EditorFor(model => model.ReservedDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ReservedDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ReservedTimeFrom, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ReservedTimeFrom, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ReservedTimeFrom, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ReservedTimeTo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ReservedTimeTo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ReservedTimeTo, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">


        @Html.TextBoxFor(model => model.RoomId, "", htmlAttributes: new { hidden = "hidden" })
        @Html.ValidationMessageFor(model => model.RoomId, "", new { @class = "text-danger" })

    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.SelectedUsersEmails, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            

            @Html.DropDownList("usersEmails", new SelectList(ViewBag.UsersEmails, ViewBag.selected), new { id = "usersEmails", multiple = "multiple", @class = "form-control" })
           

        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" name="submit" id="submit" value="Create" class="btn btn-default" />
            <div id="messageShow" class="text-danger"></div>
        </div>
    </div>



</div>



@section Scripts {
    <script src="~/Scripts/ReservedDate.js"></script>
    @*<script src="~/Scripts/customJsValidation/ReserveValidation.js"></script>*@
    <script type="text/javascript">

         $(function () {
        $("#usersEmails").chosen();
        var my_val = $('#selected').val();
        var str_array = my_val.split(',');


        $("#usersEmails").val(str_array).trigger("chosen:updated");
        //$('#meet_participants').val(["hola", "mundo", "cruel"]).trigger('chosen:updated');
    });


    $(function () {

        $("#submit").click(function () {

            var createReserveViewModel = {
                'EventName': $("#EventName").val(),
                'ReservedDate': $("#ReservedDate").val(),
                'ReservedTimeFrom': $("#ReservedTimeFrom").val(),
                'ReservedTimeTo': $("#ReservedTimeTo").val(),
                'RoomId': $("#RoomId").val()
            };
            var fail = "";
            if (createReserveViewModel.EventName.length < 3) fail = "Ім'я не менше 3-х символів <br/>";
            if (createReserveViewModel.ReservedTimeFrom >= createReserveViewModel.ReservedTimeTo)
                fail += "Увага! Дата закінчення передує даті початку <br/>";



            if (fail != "") {
                $('#messageShow').html(fail);
                $('#messageShow').show();

            } else {

                alert("обробка запиту");

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("Reserve","Reserveds")',
                    data: JSON.stringify(createReserveViewModel),
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (data, status) {

                        if (data == "success") {
                            var url = "/Reserveds/Index";
                            window.location.href = url;
                        } else {

                        alert(data);
                        }

                        //LoadData();
                    },
                    error: function () {
                        alert("Error while inserting data");
                    }
                });
            }
        });
    });

       //$(function () {
       //    $("#submit").click(function () {
       //     $('#messageShow').hide();

       //     var serviceURL = '/Rooms/FirstAjax';
       //        var std = {};
       //     std.EventName = $("#EventName").val();
       //     std.ReservedDate = $('#ReservedDate').val();
       //     std.ReservedTimeFrom = $("#ReservedTimeFrom").val();
       //     std.ReservedTimeTo = $("#ReservedTimeTo").val();
       //     std.RoomId = $("#RoomId").val();


       //     var fail = "";

       //     if (EventName.length < 3) fail = "Ім'я не менше 3-х символів <br/>";
       //     if (ReservedTimeFrom >= ReservedTimeTo) fail += "Доцільно бронювати на додатній проміжок часу <br/>";



       //     if (fail != "") {
       //         $('#messageShow').html(fail);
       //         $('#messageShow').show();
       //         return false;
       //     } else {
       //         return true;
       //     }
       //     $.ajax({
       //         type: "POST",
       //         url: serviceURL,
       //         data: { data: std },
       //         contentType: "application/json; charset=utf-8",
       //         dataType: "json",
       //         success: function () { alert('Success' + std); },
       //         error: errorFunc
       //     });



       //     function errorFunc() {
       //         alert('error');
       //     }
       // });
    </script>
}

